extern int main1();
extern int main2();
extern bool main3();
extern float main4();
extern int main5(int a);
extern int main6(int a, int b);
extern bool main7(int a);
extern float main8(int a, int b);
extern bool main9(int a);
extern bool main10(int a, int b);
extern void main11(int a);
extern void main12(int a, int b);

/*
 * Multiline comments
 */

// Single line comment
extern int[index] bla1;
extern float bla2;
extern bool bla3;

int a;
int b = 42;
export float c;
export float d = 13.1;
export float[4] e = [1, 2, 3, 4];
export float[function(), 1, id] olaf = [1, 2, 3];
int[2] fruit = [aantalAppels, aantalPeren];

int empty() {
	int a;
	int d;
}
void singleParam() {
	int b;
}
export void multipleParams(int a, float b) {
	int c;
}
int onlyDecs(int a, int b) {
    int c;
}
export int onlyStatement(bool a) {
    c = d;
}
int main() {
    int a;
    int aa;
    int b = 1;
    int bb = 1;
    int q = 2 + 3 * -4;
    int c;
    bool b_ = main7(4 + -8);
    float l = 9.0 / 0.00;
    a = 2 + 3 * 4;
    a = b;
    aa = bb;
    if (aa > bb) {
        bb = aa;
    } else {
        aa = bb;
        return;
    }
    while (aa != bb) {
        bb = bb + 1;
    }
    do {
        aa = bb;
        for (int q = 4, aa) {
            bb = c;
        }
        return a - 1;
    } while (a != c && c > b);
    main1();
    main2();
    main3();
    b = main();
    b = main1();
    b = main2();
    d = main4();
    for (int i = 0, 10) {
        a = b;
    }
    for (int i = 100, 0) {
        b = a;
    }
}
int typecast() {
    int a = -4;
    float b = (float) a;
    float c = 4.2;
    float e = -1.3;
    int d = (int) c;
}
int mainArrayTest() {
    // Onderstaande slikt de reference compiler NIET! dit hoeven wij dus ook niet te supporten
    //    int[2, 2] boodschappen = [[bruinBrood, witBrood], fruit];
        int aantalAppels =2;
        int aantalPeren = 0;
        int bruinBrood = 10;
        int witBrood = 15;
        // Dit moet nog geregeld worden
    //    int[2] fruit = [aantalAppels, aantalPeren];
    //    int[2, 2] boodschappen = [[bruinBrood, witBrood], [aantalAppels, aantalPeren]];
    //    boodschappen[1 ,0] = fruit[1];
        return -1000000;
}